<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="TransparentBack" Color="Black" Opacity="0"/>

    <Style x:Key="myHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <!--Style for input boxes-->
    <Style x:Key="InputStyle" TargetType="{x:Type TextBox}">
        <Setter Property="TextElement.FontFamily" Value="Fonts/#Bahnschrift"/>
        <Setter Property="TextElement.FontSize" Value="15"/>
    </Style>


    <!--Add/Remove style for listview Control-->
    <Style x:Key="BlankListView" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0 5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Add/Remove style for listview Control-->
    <Style x:Key="BlankListViewWithSpacing" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource BlankListView}">
        <Setter Property="Margin" Value="0 5" />
    </Style>


    <!-- Font Style for general labels -->
    <Style x:Key="label" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Bahnschrift"/>
    </Style>

    <!-- Font Style for Header labels -->
    <Style x:Key="HeaderLabel" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontFamily" Value="Bahnschrift"/>
    </Style>

    <!--Combo box dropdown button-->
    <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="32" />
                        </Grid.ColumnDefinitions>
                        <Border
                          x:Name="Border"
                          Grid.ColumnSpan="2"
                          CornerRadius="5"
                          Background="{TemplateBinding Background}"
                          BorderBrush="Black"
                          BorderThickness="1" 
                        />

                        <Path
                            x:Name="Arrow"
                            Grid.Column="1"    
                            Fill="{TemplateBinding Foreground}"
                            Stroke="{TemplateBinding Foreground}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 4 4 L 8 0 Z"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="True" />
    </ControlTemplate>

    <!--Style for general combobox -->
    <Style x:Key="theComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="#333" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Background" Value="White" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="FontFamily" Value="Bahnschrift"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            Cursor="Hand"
                            Name="ToggleButton"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                            Style="{StaticResource ComboBoxToggleButton}"

                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press"/>

                        <ContentPresenter
                            Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="10,3,30,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />

                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="3,3,23,3"
                            Focusable="True"                               
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid
                              Name="DropDown"
                              SnapsToDevicePixels="True"               
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border
                                    CornerRadius="5"
                                    x:Name="DropDownBorder"
                                    Background="White"
                                    BorderThickness="1"
                                    BorderBrush="Black"
                                    />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!--Data trigger for service search items-->
    <Style x:Key="comboBoxForServiceSearch" TargetType="ComboBox" BasedOn="{StaticResource theComboBox}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding itemDataType}" Value="service">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Data trigger for search items that are string data types-->
    <Style x:Key="comboBoxForStringSearch" TargetType="ComboBox" BasedOn="{StaticResource theComboBox}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding itemDataType}" Value="string">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Data trigger for search items that are numbers (int,sbyte) data types-->
    <Style x:Key="comboBoxForNumSearch" TargetType="ComboBox" BasedOn="{StaticResource theComboBox}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding itemDataType}" Value="int">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding itemDataType}" Value="sbyte">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Data trigger for search items that are bool data types-->
    <Style x:Key="comboBoxForBoolSearch" TargetType="ComboBox" BasedOn="{StaticResource theComboBox}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding itemDataType}" Value="bool">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Style for combobox items-->
    <Style x:Key="theComboBoxItem" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontFamily" Value="Bahnschrift"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border
                        Name="Border"
                        Padding="5"
                        BorderThickness="2,0,0,0"
                        CornerRadius="0"
                        Background="Transparent"
                        BorderBrush="Transparent">
                        <TextBlock TextAlignment="Left">
                            <ContentPresenter />
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#B3CB37"/>
                            <Setter TargetName="Border" Property="Background" Value="#FFDDECA8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FormComboBoxItem" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource theComboBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

        <!--Style for rounded textboxes-->
    <Style x:Key="RoundedTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="FontFamily" Value="Bahnschrift"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" 
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding itemDataType}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding itemDataType}" Value="bool">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding itemDataType}" Value="service">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Style trigger for option popup buttons-->
    <Style x:Key="SearchTextInput" TargetType="{x:Type TextBox}" BasedOn="{StaticResource RoundedTextBoxStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding itemDataType}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding itemDataType}" Value="bool">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding itemDataType}" Value="service">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Stack panel for labels in client form-->
    <Style x:Key="ClientFormLabels" TargetType="{x:Type StackPanel}">
        <Style.Resources>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Margin" Value="0,2.5,0,0"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="FontFamily" Value="Bahnschrift"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
            </Style>
        </Style.Resources>
    </Style>

    <!--Stack panel for TextBoxes in client form-->
    <Style x:Key="ClientFormInput" TargetType="{x:Type StackPanel}">
        <Style.Resources>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="0,5.3,0,0"/>
                <Setter Property="Width" Value="110"/>
                <Setter Property="Height" Value="22"/>
                <Setter Property="TextElement.FontFamily" Value="Fonts/#Bahnschrift"/>
                <Setter Property="TextElement.FontSize" Value="12"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource theComboBox}">
                
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Margin" Value="0,5.3,0,0"/>
                <Setter Property="Width" Value="110"/>
                <Setter Property="Height" Value="22"/>
                <Setter Property="TextElement.FontFamily" Value="Fonts/#Bahnschrift"/>
                <Setter Property="TextElement.FontSize" Value="12"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="ItemContainerStyle" Value="{DynamicResource FormComboBoxItem}"/>
            </Style>
        </Style.Resources>
    </Style>


    <!-- Button Style for current active Menu Tab-->
    <Style x:Key="ButtonTabActive" TargetType="{x:Type Button}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
        </Style.Resources>
        <Setter Property="FontFamily" Value="Bahnschrift"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Background" Value="White"/>
    </Style>

    <!-- Button Style for Inactive Menu Tabs-->
    <Style x:Key="ButtonTabInactive" TargetType="{x:Type Button}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
        </Style.Resources>
        <Setter Property="FontFamily" Value="Bahnschrift"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource TransparentBack}"/>
    </Style>

    <!-- Button Style for general buttons-->
    <Style x:Key="Button" TargetType="{x:Type Button}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
        </Style.Resources>
        <Setter Property="FontFamily" Value="Bahnschrift"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Background" Value="#FFFFD47A"/>
    </Style>

    <!-- Button Style trigger for Ok popup button-->
    <Style x:Key="OkPopupButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Button}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding popupType}" Value="confirm">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- Button Style trigger for option popup buttons-->
    <Style x:Key="OptionPopupButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Button}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding popupType}" Value="option">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    

    <!--DataTrigger style for submit clients button-->
    <Style x:Key="submitClients" TargetType="Button" BasedOn="{StaticResource Button}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding clientList.Count}" Value="0">
                <Setter Property="IsEnabled" Value="False"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- Button Style for general buttons-->
    <Style x:Key="ServiceButton" TargetType="{x:Type Button}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
        </Style.Resources>
        <Setter Property="FontFamily" Value="Bahnschrift"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Background" Value="#FFFFD47A"/>
    </Style>
</ResourceDictionary>